{"version":3,"sources":["home/home.js","components/service.js","components/ChartNode.js","components/ChartContainer.js","default-chart/default-chart.js","pan-zoom-chart/pan-zoom-chart.js","custom-node-chart/my-node.js","custom-node-chart/custom-node-chart.js","export-chart/export-chart.js","drag-drop-chart/drag-drop-chart.js","edit-chart/edit-chart.js","edit-node/edit-node.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","href","target","width","height","xmlns","stroke","transform","fill","strokeWidth","strokeDasharray","strokeLinejoin","strokeLinecap","x","y","id","fontSize","fontFamily","textAnchor","fontWeight","rx","ry","x1","y1","x2","y2","stroklinejoin","src","alt","subject1","Subject","subject2","dragNodeService","next","draggedNodeId","asObservable","selectNodeService","selectedNodeId","ChartNode","datasource","NodeTemplate","draggable","collapsible","multipleSelect","changeHierarchy","onClickNode","node","useRef","useState","isChildrenCollapsed","setIsChildrenCollapsed","topEdgeExpanded","setTopEdgeExpanded","rightEdgeExpanded","setRightEdgeExpanded","bottomEdgeExpanded","setBottomEdgeExpanded","leftEdgeExpanded","setLeftEdgeExpanded","allowedDrop","setAllowedDrop","selected","setSelected","nodeClass","filter","item","join","useEffect","subs1","subscribe","draggedInfo","document","querySelector","closest","current","subs2","selectedNodeInfo","unsubscribe","toggleAncestors","actionNode","parentNode","firstChild","classList","contains","remove","isSiblingsCollapsed","Array","from","children","some","toggleSiblings","add","split","previousSibling","toggle","nextSibling","hEdgeClickHandler","e","stopPropagation","ref","undefined","onClick","event","onDragStart","copyDS","relationship","dataTransfer","setData","JSON","stringify","onDragOver","preventDefault","onDragEnd","onDrop","currentTarget","parse","getData","onMouseEnter","parent","isAncestorsCollapsed","onMouseLeave","nodeData","charAt","name","title","length","map","key","defaultProps","ChartContainer","forwardRef","pan","zoom","zoomoutLimit","zoominLimit","containerClass","chartClass","onClickChart","container","chart","downloadButton","startX","setStartX","startY","setStartY","setTransform","panning","setPanning","cursor","setCursor","exporting","setExporting","dataURL","setDataURL","download","setDownload","ds","setDS","dsDigger","JSONDigger","draggedItemData","dropTargetId","a","removeNode","addChildren","useImperativeHandle","exportTo","exportFilename","exportFileextension","originalScrollLeft","scrollLeft","originalScrollTop","scrollTop","html2canvas","clientWidth","clientHeight","onclone","clonedDoc","style","background","then","canvas","toLowerCase","canvasWidth","Math","floor","canvasHeight","doc","jsPDF","orientation","unit","format","addImage","toDataURL","save","exportPDF","isWebkit","documentElement","isFf","window","sidebar","isEdge","navigator","appName","appVersion","indexOf","msSaveBlob","msToBlob","click","exportPNG","expandAllNodes","querySelectorAll","forEach","el","onWheel","newScale","matrix","targetScale","abs","parseFloat","updateChartScale","deltaY","onMouseUp","onMouseDown","lastX","lastY","parseInt","targetTouches","pageX","pageY","onMouseMove","newX","newY","attachRel","data","flags","DefaultChart","PanZoomChart","MyNode","alert","CustomNodeChart","ExportChart","orgchart","filename","setFilename","fileextension","setFileextension","onExtensionChange","value","htmlFor","type","onChange","marginRight","checked","marginLeft","DragDropChart","EditChart","Set","selectedNodes","setSelectedNodes","newNodes","setNewNodes","isEditMode","setIsEditMode","isMultipleSelect","setIsMultipleSelect","addNewNode","prevNewNodes","getNewNodes","nodes","push","uuidv4","addChildNodes","addSiblingNodes","addSiblings","removeNodes","display","index","placeholder","onNameChange","onTitleChange","disabled","splice","removeNewNode","addRoot","prev","EditNode","newNodeName","setNewNodeName","newNodeTitle","setNewNodeTitle","updateNodes","App","to","exact","activeClassName","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d99aaf9f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-wrapper\">\n      <a\n        href=\"https://github.com/dabeng/react-orgchart\"\n        target=\"blank\"\n        className=\"repo-logo\"\n      >\n        <svg width=\"860\" height=\"240\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g>\n            <title>Logo of Dabeng&#x27;s js studio</title>\n            <text\n              stroke=\"#b80036\"\n              transform=\"matrix(1.2821781635284424,0,0,1.313725471496582,-94.81186294555664,-18.196077346801758) \"\n              fill=\"#b80036\"\n              strokeWidth=\"3\"\n              strokeDasharray=\"null\"\n              strokeLinejoin=\"null\"\n              strokeLinecap=\"null\"\n              x=\"524.741312\"\n              y=\"134.910448\"\n              id=\"svg_4\"\n              fontSize=\"92\"\n              fontFamily=\"Sans-serif\"\n              textAnchor=\"middle\"\n              fontWeight=\"bold\"\n            >\n              OrgChart\n            </text>\n            <g id=\"svg_5\" stroke=\"null\">\n              <rect\n                id=\"svg_1\"\n                height=\"43.609757\"\n                width=\"128.702291\"\n                y=\"45\"\n                x=\"95.791349\"\n                strokeLinecap=\"null\"\n                strokeLinejoin=\"null\"\n                strokeDasharray=\"null\"\n                strokeWidth=\"7\"\n                fill=\"none\"\n                rx=\"5\"\n                ry=\"5\"\n                stroke=\"#b80036\"\n              />\n              <rect\n                height=\"43.609757\"\n                width=\"128.702291\"\n                y=\"150.390247\"\n                x=\"172.297711\"\n                strokeLinecap=\"null\"\n                strokeLinejoin=\"null\"\n                strokeDasharray=\"null\"\n                strokeWidth=\"7\"\n                fill=\"none\"\n                id=\"svg_2\"\n                rx=\"5\"\n                ry=\"5\"\n                stroke=\"#b80036\"\n              />\n              <rect\n                height=\"43.609757\"\n                width=\"128.702291\"\n                y=\"150.390247\"\n                x=\"20\"\n                strokeLinecap=\"null\"\n                strokeLinejoin=\"null\"\n                strokeDasharray=\"null\"\n                strokeWidth=\"7\"\n                fill=\"none\"\n                id=\"svg_3\"\n                rx=\"5\"\n                ry=\"5\"\n                stroke=\"#b80036\"\n              />\n              <line\n                fill=\"none\"\n                strokeWidth=\"3\"\n                strokeDasharray=\"null\"\n                strokeLinejoin=\"null\"\n                strokeLinecap=\"null\"\n                x1=\"83.636139\"\n                y1=\"120.590246\"\n                x2=\"236.648851\"\n                y2=\"120.590246\"\n                id=\"svg_8\"\n                stroke=\"#b80036\"\n              />\n              <line\n                fill=\"none\"\n                strokeWidth=\"3\"\n                strokeDasharray=\"null\"\n                stroklinejoin=\"null\"\n                strokeLinecap=\"null\"\n                x1=\"84.351146\"\n                y1=\"119.86342\"\n                x2=\"84.351146\"\n                y2=\"148.209759\"\n                id=\"svg_10\"\n                stroke=\"#b80036\"\n              />\n              <line\n                fill=\"none\"\n                strokeWidth=\"3\"\n                strokeDasharray=\"null\"\n                strokeLinejoin=\"null\"\n                strokeLinecap=\"null\"\n                x1=\"235.933844\"\n                y1=\"119.863418\"\n                x2=\"235.933844\"\n                y2=\"148.209759\"\n                id=\"svg_11\"\n                stroke=\"#b80036\"\n              />\n              <line\n                fill=\"none\"\n                strokeWidth=\"3\"\n                strokeDasharray=\"null\"\n                strokeLinejoin=\"null\"\n                strokeLinecap=\"null\"\n                x1=\"160.142495\"\n                y1=\"90.790247\"\n                x2=\"160.142495\"\n                y2=\"119.863416\"\n                id=\"svg_12\"\n                stroke=\"#b80036\"\n              />\n            </g>\n          </g>\n        </svg>\n      </a>\n      <a href=\"https://github.com/dabeng\" target=\"blank\" className=\"author-logo\">\n        <img src=\"https://rawgit.com/dabeng/OrgChart/master/demo/img/logo.png\" alt=\"logo\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Subject } from \"rxjs\";\n\nconst subject1 = new Subject();\nconst subject2 = new Subject();\n\nexport const dragNodeService = {\n  sendDragInfo: id => subject1.next({ draggedNodeId: id }),\n  clearDragInfo: () => subject1.next(),\n  getDragInfo: () => subject1.asObservable()\n};\n\nexport const selectNodeService = {\n  sendSelectedNodeInfo: id => subject2.next({ selectedNodeId: id }),\n  clearSelectedNodeInfo: () => subject2.next(),\n  getSelectedNodeInfo: () => subject2.asObservable()\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { dragNodeService, selectNodeService } from \"./service\";\nimport \"./ChartNode.css\";\n\nconst propTypes = {\n  datasource: PropTypes.object,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  changeHierarchy: PropTypes.func,\n  onClickNode: PropTypes.func\n};\n\nconst defaultProps = {\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false\n};\n\nconst ChartNode = ({\n  datasource,\n  NodeTemplate,\n  draggable,\n  collapsible,\n  multipleSelect,\n  changeHierarchy,\n  onClickNode\n}) => {\n  const node = useRef();\n\n  const [isChildrenCollapsed, setIsChildrenCollapsed] = useState(false);\n  const [topEdgeExpanded, setTopEdgeExpanded] = useState();\n  const [rightEdgeExpanded, setRightEdgeExpanded] = useState();\n  const [bottomEdgeExpanded, setBottomEdgeExpanded] = useState();\n  const [leftEdgeExpanded, setLeftEdgeExpanded] = useState();\n  const [allowedDrop, setAllowedDrop] = useState(false);\n  const [selected, setSelected] = useState(false);\n\n  const nodeClass = [\n    \"oc-node\",\n    isChildrenCollapsed ? \"isChildrenCollapsed\" : \"\",\n    allowedDrop ? \"allowedDrop\" : \"\",\n    selected ? \"selected\" : \"\"\n  ]\n    .filter(item => item)\n    .join(\" \");\n\n  useEffect(() => {\n    const subs1 = dragNodeService.getDragInfo().subscribe(draggedInfo => {\n      if (draggedInfo) {\n        setAllowedDrop(\n          !document\n            .querySelector(\"#\" + draggedInfo.draggedNodeId)\n            .closest(\"li\")\n            .querySelector(\"#\" + node.current.id)\n            ? true\n            : false\n        );\n      } else {\n        setAllowedDrop(false);\n      }\n    });\n\n    const subs2 = selectNodeService\n      .getSelectedNodeInfo()\n      .subscribe(selectedNodeInfo => {\n        if (selectedNodeInfo) {\n          if (multipleSelect) {\n            if (selectedNodeInfo.selectedNodeId === datasource.id) {\n              setSelected(true);\n            }\n          } else {\n            setSelected(selectedNodeInfo.selectedNodeId === datasource.id);\n          }\n        } else {\n          setSelected(false);\n        }\n      });\n\n    return () => {\n      subs1.unsubscribe();\n      subs2.unsubscribe();\n    };\n  }, [multipleSelect, datasource]);\n\n  const addArrows = e => {\n    const node = e.target.closest(\"li\");\n    const parent = node.parentNode.closest(\"li\");\n    const isAncestorsCollapsed =\n      node && parent\n        ? parent.firstChild.classList.contains(\"hidden\")\n        : undefined;\n    const isSiblingsCollapsed = Array.from(\n      node.parentNode.children\n    ).some(item => item.classList.contains(\"hidden\"));\n\n    setTopEdgeExpanded(!isAncestorsCollapsed);\n    setRightEdgeExpanded(!isSiblingsCollapsed);\n    setLeftEdgeExpanded(!isSiblingsCollapsed);\n    setBottomEdgeExpanded(!isChildrenCollapsed);\n  };\n\n  const removeArrows = () => {\n    setTopEdgeExpanded(undefined);\n    setRightEdgeExpanded(undefined);\n    setBottomEdgeExpanded(undefined);\n    setLeftEdgeExpanded(undefined);\n  };\n\n  const toggleAncestors = actionNode => {\n    let node = actionNode.parentNode.closest(\"li\");\n    if (!node) return;\n    const isAncestorsCollapsed = node.firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      // 向上展开，只展开一级\n      actionNode.classList.remove(\"isAncestorsCollapsed\");\n      node.firstChild.classList.remove(\"hidden\");\n    } else {\n      // 向下折叠，则折叠所有祖先节点以及祖先节点的兄弟节点\n      const isSiblingsCollapsed = Array.from(\n        actionNode.parentNode.children\n      ).some(item => item.classList.contains(\"hidden\"));\n      if (!isSiblingsCollapsed) {\n        toggleSiblings(actionNode);\n      }\n      actionNode.classList.add(\n        ...(\n          \"isAncestorsCollapsed\" +\n          (isSiblingsCollapsed ? \"\" : \" isSiblingsCollapsed\")\n        ).split(\" \")\n      );\n      node.firstChild.classList.add(\"hidden\");\n      // 如果还有展开的祖先节点，那继续折叠关闭之\n      if (\n        node.parentNode.closest(\"li\") &&\n        !node.parentNode.closest(\"li\").firstChild.classList.contains(\"hidden\")\n      ) {\n        toggleAncestors(node);\n      }\n    }\n  };\n\n  const topEdgeClickHandler = e => {\n    e.stopPropagation();\n    setTopEdgeExpanded(!topEdgeExpanded);\n    toggleAncestors(e.target.closest(\"li\"));\n  };\n\n  const bottomEdgeClickHandler = e => {\n    e.stopPropagation();\n    setIsChildrenCollapsed(!isChildrenCollapsed);\n    setBottomEdgeExpanded(!bottomEdgeExpanded);\n  };\n\n  const toggleSiblings = actionNode => {\n    let node = actionNode.previousSibling;\n    const isSiblingsCollapsed = Array.from(\n      actionNode.parentNode.children\n    ).some(item => item.classList.contains(\"hidden\"));\n    actionNode.classList.toggle(\"isSiblingsCollapsed\", !isSiblingsCollapsed);\n    // 先处理同级的兄弟节点\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.previousSibling;\n    }\n    node = actionNode.nextSibling;\n    while (node) {\n      if (isSiblingsCollapsed) {\n        node.classList.remove(\"hidden\");\n      } else {\n        node.classList.add(\"hidden\");\n      }\n      node = node.nextSibling;\n    }\n    // 在展开兄弟节点的同时，还要展开父节点\n    const isAncestorsCollapsed = actionNode.parentNode\n      .closest(\"li\")\n      .firstChild.classList.contains(\"hidden\");\n    if (isAncestorsCollapsed) {\n      toggleAncestors(actionNode);\n    }\n  };\n\n  const hEdgeClickHandler = e => {\n    e.stopPropagation();\n    setLeftEdgeExpanded(!leftEdgeExpanded);\n    setRightEdgeExpanded(!rightEdgeExpanded);\n    toggleSiblings(e.target.closest(\"li\"));\n  };\n\n  const filterAllowedDropNodes = id => {\n    dragNodeService.sendDragInfo(id);\n  };\n\n  const clickNodeHandler = event => {\n    if (onClickNode) {\n      onClickNode(datasource);\n    }\n\n    selectNodeService.sendSelectedNodeInfo(datasource.id);\n  };\n\n  const dragstartHandler = event => {\n    const copyDS = { ...datasource };\n    delete copyDS.relationship;\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(copyDS));\n    // highlight all potential drop targets\n    filterAllowedDropNodes(node.current.id);\n  };\n\n  const dragoverHandler = event => {\n    // prevent default to allow drop\n    event.preventDefault();\n  };\n\n  const dragendHandler = () => {\n    // reset background of all potential drop targets\n    dragNodeService.clearDragInfo();\n  };\n\n  const dropHandler = event => {\n    if (!event.currentTarget.classList.contains(\"allowedDrop\")) {\n      return;\n    }\n    dragNodeService.clearDragInfo();\n    changeHierarchy(\n      JSON.parse(event.dataTransfer.getData(\"text/plain\")),\n      event.currentTarget.id\n    );\n  };\n\n  return (\n    <li className=\"oc-hierarchy\">\n      <div\n        ref={node}\n        id={datasource.id}\n        className={nodeClass}\n        draggable={draggable ? \"true\" : undefined}\n        onClick={clickNodeHandler}\n        onDragStart={dragstartHandler}\n        onDragOver={dragoverHandler}\n        onDragEnd={dragendHandler}\n        onDrop={dropHandler}\n        onMouseEnter={addArrows}\n        onMouseLeave={removeArrows}\n      >\n        {NodeTemplate ? (\n          <NodeTemplate nodeData={datasource} />\n        ) : (\n          <>\n            <div className=\"oc-heading\">\n              {datasource.relationship &&\n                datasource.relationship.charAt(2) === \"1\" && (\n                  <i className=\"oci oci-leader oc-symbol\" />\n                )}\n              {datasource.name}\n            </div>\n            <div className=\"oc-content\">{datasource.title}</div>\n          </>\n        )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(0) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge topEdge oci ${\n                topEdgeExpanded === undefined\n                  ? \"\"\n                  : topEdgeExpanded\n                  ? \"oci-chevron-down\"\n                  : \"oci-chevron-up\"\n              }`}\n              onClick={topEdgeClickHandler}\n            />\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(1) === \"1\" && (\n            <>\n              <i\n                className={`oc-edge horizontalEdge rightEdge oci ${\n                  rightEdgeExpanded === undefined\n                    ? \"\"\n                    : rightEdgeExpanded\n                    ? \"oci-chevron-left\"\n                    : \"oci-chevron-right\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n              <i\n                className={`oc-edge horizontalEdge leftEdge oci ${\n                  leftEdgeExpanded === undefined\n                    ? \"\"\n                    : leftEdgeExpanded\n                    ? \"oci-chevron-right\"\n                    : \"oci-chevron-left\"\n                }`}\n                onClick={hEdgeClickHandler}\n              />\n            </>\n          )}\n        {collapsible &&\n          datasource.relationship &&\n          datasource.relationship.charAt(2) === \"1\" && (\n            <i\n              className={`oc-edge verticalEdge bottomEdge oci ${\n                bottomEdgeExpanded === undefined\n                  ? \"\"\n                  : bottomEdgeExpanded\n                  ? \"oci-chevron-up\"\n                  : \"oci-chevron-down\"\n              }`}\n              onClick={bottomEdgeClickHandler}\n            />\n          )}\n      </div>\n      {datasource.children && datasource.children.length > 0 && (\n        <ul className={isChildrenCollapsed ? \"hidden\" : \"\"}>\n          {datasource.children.map(node => (\n            <ChartNode\n              datasource={node}\n              NodeTemplate={NodeTemplate}\n              id={node.id}\n              key={node.id}\n              draggable={draggable}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nChartNode.propTypes = propTypes;\nChartNode.defaultProps = defaultProps;\n\nexport default ChartNode;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { selectNodeService } from './service';\nimport JSONDigger from 'json-digger';\nimport html2canvas from 'html2canvas-render-offscreen';\nimport jsPDF from 'jspdf';\nimport ChartNode from './ChartNode';\nimport './ChartContainer.css';\n\nconst propTypes = {\n  datasource: PropTypes.object.isRequired,\n  pan: PropTypes.bool,\n  zoom: PropTypes.bool,\n  zoomoutLimit: PropTypes.number,\n  zoominLimit: PropTypes.number,\n  containerClass: PropTypes.string,\n  chartClass: PropTypes.string,\n  NodeTemplate: PropTypes.elementType,\n  draggable: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  multipleSelect: PropTypes.bool,\n  onClickNode: PropTypes.func,\n  onClickChart: PropTypes.func,\n};\n\nconst defaultProps = {\n  pan: false,\n  zoom: false,\n  zoomoutLimit: 0.5,\n  zoominLimit: 7,\n  containerClass: '',\n  chartClass: '',\n  draggable: false,\n  collapsible: true,\n  multipleSelect: false,\n};\n\nconst ChartContainer = forwardRef(\n  (\n    {\n      datasource,\n      pan,\n      zoom,\n      zoomoutLimit,\n      zoominLimit,\n      containerClass,\n      chartClass,\n      NodeTemplate,\n      draggable,\n      collapsible,\n      multipleSelect,\n      onClickNode,\n      onClickChart,\n    },\n    ref\n  ) => {\n    const container = useRef();\n    const chart = useRef();\n    const downloadButton = useRef();\n\n    const [startX, setStartX] = useState(0);\n    const [startY, setStartY] = useState(0);\n    const [transform, setTransform] = useState('');\n    const [panning, setPanning] = useState(false);\n    const [cursor, setCursor] = useState('default');\n    const [exporting, setExporting] = useState(false);\n    const [dataURL, setDataURL] = useState('');\n    const [download, setDownload] = useState('');\n\n    const attachRel = (data, flags) => {\n      data.relationship =\n        flags + (data.children && data.children.length > 0 ? 1 : 0);\n      if (data.children) {\n        data.children.forEach(function (item) {\n          attachRel(item, '1' + (data.children.length > 1 ? 1 : 0));\n        });\n      }\n      return data;\n    };\n\n    const [ds, setDS] = useState(datasource);\n    useEffect(() => {\n      setDS(datasource);\n    }, [datasource]);\n\n    const dsDigger = new JSONDigger(datasource, 'id', 'children');\n\n    const clickChartHandler = (event) => {\n      if (!event.target.closest('.oc-node')) {\n        if (onClickChart) {\n          onClickChart();\n        }\n        selectNodeService.clearSelectedNodeInfo();\n      }\n    };\n\n    const panEndHandler = () => {\n      setPanning(false);\n      setCursor('default');\n    };\n\n    const panHandler = (e) => {\n      let newX = 0;\n      let newY = 0;\n      if (!e.targetTouches) {\n        // pand on desktop\n        newX = e.pageX - startX;\n        newY = e.pageY - startY;\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        newX = e.targetTouches[0].pageX - startX;\n        newY = e.targetTouches[0].pageY - startY;\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n      if (transform === '') {\n        if (transform.indexOf('3d') === -1) {\n          setTransform('matrix(1,0,0,1,' + newX + ',' + newY + ')');\n        } else {\n          setTransform(\n            'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,' + newX + ', ' + newY + ',0,1)'\n          );\n        }\n      } else {\n        let matrix = transform.split(',');\n        if (transform.indexOf('3d') === -1) {\n          matrix[4] = newX;\n          matrix[5] = newY + ')';\n        } else {\n          matrix[12] = newX;\n          matrix[13] = newY;\n        }\n        setTransform(matrix.join(','));\n      }\n    };\n\n    const panStartHandler = (e) => {\n      if (e.target.closest('.oc-node')) {\n        setPanning(false);\n        return;\n      } else {\n        setPanning(true);\n        setCursor('move');\n      }\n      let lastX = 0;\n      let lastY = 0;\n      if (transform !== '') {\n        let matrix = transform.split(',');\n        if (transform.indexOf('3d') === -1) {\n          lastX = parseInt(matrix[4]);\n          lastY = parseInt(matrix[5]);\n        } else {\n          lastX = parseInt(matrix[12]);\n          lastY = parseInt(matrix[13]);\n        }\n      }\n      if (!e.targetTouches) {\n        // pand on desktop\n        setStartX(e.pageX - lastX);\n        setStartY(e.pageY - lastY);\n      } else if (e.targetTouches.length === 1) {\n        // pan on mobile device\n        setStartX(e.targetTouches[0].pageX - lastX);\n        setStartY(e.targetTouches[0].pageY - lastY);\n      } else if (e.targetTouches.length > 1) {\n        return;\n      }\n    };\n\n    const updateChartScale = (newScale) => {\n      let matrix = [];\n      let targetScale = 1;\n      if (transform === '') {\n        setTransform('matrix(' + newScale + ', 0, 0, ' + newScale + ', 0, 0)');\n      } else {\n        matrix = transform.split(',');\n        if (transform.indexOf('3d') === -1) {\n          targetScale = Math.abs(window.parseFloat(matrix[3]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = 'matrix(' + targetScale;\n            matrix[3] = targetScale;\n            setTransform(matrix.join(','));\n          }\n        } else {\n          targetScale = Math.abs(window.parseFloat(matrix[5]) * newScale);\n          if (targetScale > zoomoutLimit && targetScale < zoominLimit) {\n            matrix[0] = 'matrix3d(' + targetScale;\n            matrix[5] = targetScale;\n            setTransform(matrix.join(','));\n          }\n        }\n      }\n    };\n\n    const zoomHandler = (e) => {\n      let newScale = 1 + (e.deltaY > 0 ? -0.2 : 0.2);\n      updateChartScale(newScale);\n    };\n\n    const exportPDF = (canvas, exportFilename) => {\n      const canvasWidth = Math.floor(canvas.width);\n      const canvasHeight = Math.floor(canvas.height);\n      const doc =\n        canvasWidth > canvasHeight\n          ? new jsPDF({\n              orientation: 'landscape',\n              unit: 'px',\n              format: [canvasWidth, canvasHeight],\n            })\n          : new jsPDF({\n              orientation: 'portrait',\n              unit: 'px',\n              format: [canvasHeight, canvasWidth],\n            });\n      doc.addImage(canvas.toDataURL('image/jpeg', 1.0), 'JPEG', 0, 0);\n      doc.save(exportFilename + '.pdf');\n    };\n\n    const exportPNG = (canvas, exportFilename) => {\n      const isWebkit = 'WebkitAppearance' in document.documentElement.style;\n      const isFf = !!window.sidebar;\n      const isEdge =\n        navigator.appName === 'Microsoft Internet Explorer' ||\n        (navigator.appName === 'Netscape' &&\n          navigator.appVersion.indexOf('Edge') > -1);\n\n      if ((!isWebkit && !isFf) || isEdge) {\n        window.navigator.msSaveBlob(canvas.msToBlob(), exportFilename + '.png');\n      } else {\n        setDataURL(canvas.toDataURL());\n        setDownload(exportFilename + '.png');\n        downloadButton.current.click();\n      }\n    };\n\n    const changeHierarchy = async (draggedItemData, dropTargetId) => {\n      await dsDigger.removeNode(draggedItemData.id);\n      await dsDigger.addChildren(dropTargetId, draggedItemData);\n      setDS({ ...dsDigger.ds });\n    };\n\n    useImperativeHandle(ref, () => ({\n      exportTo: (exportFilename, exportFileextension) => {\n        exportFilename = exportFilename || 'OrgChart';\n        exportFileextension = exportFileextension || 'png';\n        setExporting(true);\n        const originalScrollLeft = container.current.scrollLeft;\n        container.current.scrollLeft = 0;\n        const originalScrollTop = container.current.scrollTop;\n        container.current.scrollTop = 0;\n        html2canvas(chart.current, {\n          width: chart.current.clientWidth,\n          height: chart.current.clientHeight,\n          onclone: function (clonedDoc) {\n            clonedDoc.querySelector('.orgchart').style.background = 'none';\n            clonedDoc.querySelector('.orgchart').style.transform = '';\n          },\n        }).then(\n          (canvas) => {\n            if (exportFileextension.toLowerCase() === 'pdf') {\n              exportPDF(canvas, exportFilename);\n            } else {\n              exportPNG(canvas, exportFilename);\n            }\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          },\n          () => {\n            setExporting(false);\n            container.current.scrollLeft = originalScrollLeft;\n            container.current.scrollTop = originalScrollTop;\n          }\n        );\n      },\n      expandAllNodes: () => {\n        chart.current\n          .querySelectorAll(\n            '.oc-node.hidden, .oc-hierarchy.hidden, .isSiblingsCollapsed, .isAncestorsCollapsed'\n          )\n          .forEach((el) => {\n            el.classList.remove(\n              'hidden',\n              'isSiblingsCollapsed',\n              'isAncestorsCollapsed'\n            );\n          });\n      },\n    }));\n\n    return (\n      <div\n        ref={container}\n        className={'orgchart-container ' + containerClass}\n        onWheel={zoom ? zoomHandler : undefined}\n        onMouseUp={pan && panning ? panEndHandler : undefined}\n      >\n        <div\n          ref={chart}\n          className={'orgchart ' + chartClass}\n          style={{ transform: transform, cursor: cursor }}\n          onClick={clickChartHandler}\n          onMouseDown={pan ? panStartHandler : undefined}\n          onMouseMove={pan && panning ? panHandler : undefined}\n        >\n          <ul>\n            <ChartNode\n              datasource={attachRel(ds, '00')}\n              NodeTemplate={NodeTemplate}\n              draggable={draggable}\n              collapsible={collapsible}\n              multipleSelect={multipleSelect}\n              changeHierarchy={changeHierarchy}\n              onClickNode={onClickNode}\n            />\n          </ul>\n        </div>\n        <a\n          className=\"oc-download-btn hidden\"\n          ref={downloadButton}\n          href={dataURL}\n          download={download}\n        >\n          &nbsp;\n        </a>\n        <div className={`oc-mask ${exporting ? '' : 'hidden'}`}>\n          <i className=\"oci oci-spinner spinner\"></i>\n        </div>\n      </div>\n    );\n  }\n);\n\nChartContainer.propTypes = propTypes;\nChartContainer.defaultProps = defaultProps;\n\nexport default ChartContainer;\n","import React from \"react\";\nimport OrganizationChart from \"../components/ChartContainer\";\n\nconst DefaultChart = () => {\n  const ds = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n\n  return <OrganizationChart datasource={ds} />;\n};\n\nexport default DefaultChart;\n","import React from \"react\";\nimport OrganizationChart from \"../components/ChartContainer\";\n\nconst PanZoomChart = () => {\n  const ds = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n\n  return <OrganizationChart datasource={ds} pan={true} zoom={true} />;\n};\n\nexport default PanZoomChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./my-node.css\";\n\nconst propTypes = {\n  nodeData: PropTypes.object.isRequired\n};\n\nconst MyNode = ({ nodeData }) => {\n  const selectNode = () => {\n    alert(\"Hi All. I'm \" + nodeData.name + \". I'm a \" + nodeData.title + \".\");\n  };\n\n  return (\n    <div onClick={selectNode}>\n      <div className=\"position\">{nodeData.title}</div>\n      <div className=\"fullname\">{nodeData.name}</div>\n    </div>\n  );\n};\n\nMyNode.propTypes = propTypes;\n\nexport default MyNode;\n","import React from \"react\";\nimport OrganizationChart from \"../components/ChartContainer\";\nimport MyNode from \"./my-node\";\n\nconst CustomNodeChart = () => {\n  const ds = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n\n  return <OrganizationChart datasource={ds} chartClass=\"myChart\" NodeTemplate={MyNode}/>;\n};\n\nexport default CustomNodeChart;\n","import React, { useRef, useState } from \"react\";\nimport OrganizationChart from \"../components/ChartContainer\";\nimport \"./export-chart.css\";\n\nconst ExportChart = () => {\n  const orgchart = useRef();\n  const ds = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n\n  const exportTo = () => {\n    orgchart.current.exportTo(filename, fileextension);\n  };\n\n  const [filename, setFilename] = useState(\"organization_chart\");\n  const [fileextension, setFileextension] = useState(\"png\");\n\n  const onNameChange = event => {\n    setFilename(event.target.value);\n  };\n\n  const onExtensionChange = event => {\n    setFileextension(event.target.value);\n  };\n\n  return (\n    <>\n      <section className=\"toolbar\">\n        <label htmlFor=\"txt-filename\">Filename:</label>\n        <input\n          id=\"txt-filename\"\n          type=\"text\"\n          value={filename}\n          onChange={onNameChange}\n          style={{ fontSize: \"1rem\", marginRight: \"2rem\" }}\n        />\n        <span>Fileextension: </span>\n        <input\n          id=\"rd-png\"\n          type=\"radio\"\n          value=\"png\"\n          checked={fileextension === \"png\"}\n          onChange={onExtensionChange}\n        />\n        <label htmlFor=\"rd-png\">png</label>\n        <input\n          style={{ marginLeft: \"1rem\" }}\n          id=\"rd-pdf\"\n          type=\"radio\"\n          value=\"pdf\"\n          checked={fileextension === \"pdf\"}\n          onChange={onExtensionChange}\n        />\n        <label htmlFor=\"rd-pdf\">pdf</label>\n        <button\n          onClick={exportTo}\n          style={{ marginLeft: \"2rem\" }}\n        >\n          Export\n        </button>\n      </section>\n      <OrganizationChart ref={orgchart} datasource={ds} />\n    </>\n  );\n};\n\nexport default ExportChart;\n","import React from \"react\";\nimport OrganizationChart from \"../components/ChartContainer\";\n\nconst DragDropChart = () => {\n  const ds = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n\n  return <OrganizationChart datasource={ds} draggable={true} />;\n};\n\nexport default DragDropChart;\n","import React, { useRef, useState } from \"react\";\nimport JSONDigger from \"json-digger\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport OrganizationChart from \"../components/ChartContainer\";\nimport \"./edit-chart.css\";\n\nconst EditChart = () => {\n  const orgchart = useRef();\n  const datasource = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n  const [ds, setDS] = useState(datasource);\n  const dsDigger = new JSONDigger(ds, \"id\", \"children\");\n\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\n  const [newNodes, setNewNodes] = useState([{ name: \"\", title: \"\" }]);\n  const [isEditMode, setIsEditMode] = useState(true);\n  const [isMultipleSelect, setIsMultipleSelect] = useState(false);\n\n  const readSelectedNode = nodeData => {\n    if (isMultipleSelect) {\n      setSelectedNodes(prev => new Set(prev.add(nodeData)));\n    } else {\n      setSelectedNodes(new Set([nodeData]));\n    }\n  };\n\n  const clearSelectedNode = () => {\n    setSelectedNodes(new Set());\n  };\n\n  const onNameChange = (e, index) => {\n    newNodes[index].name = e.target.value;\n    setNewNodes([...newNodes]);\n  };\n\n  const onTitleChange = (e, index) => {\n    newNodes[index].title = e.target.value;\n    setNewNodes([...newNodes]);\n  };\n\n  const addNewNode = () => {\n    setNewNodes(prevNewNodes => [...prevNewNodes, { name: \"\", title: \"\" }]);\n  };\n\n  const removeNewNode = index => {\n    setNewNodes(prevNewNodes => {\n      prevNewNodes.splice(index, 1);\n      return [...prevNewNodes];\n    });\n  };\n\n  const getNewNodes = () => {\n    const nodes = [];\n    for (const node of newNodes) {\n      nodes.push({ ...node, id: uuidv4() });\n    }\n    return nodes;\n  };\n\n  const addChildNodes = async () => {\n    await dsDigger.addChildren([...selectedNodes][0].id, getNewNodes());\n    setDS({ ...dsDigger.ds });\n  };\n\n  const addSiblingNodes = async () => {\n    await dsDigger.addSiblings([...selectedNodes][0].id, getNewNodes());\n    setDS({ ...dsDigger.ds });\n  };\n\n  const addRootNode = () => {\n    dsDigger.addRoot(getNewNodes()[0]);\n    setDS({ ...dsDigger.ds });\n  };\n\n  const remove = async () => {\n    await dsDigger.removeNodes([...selectedNodes].map(node => node.id));\n    setDS({ ...dsDigger.ds });\n    setSelectedNodes(new Set());\n  };\n\n  const onMultipleSelectChange = e => {\n    setIsMultipleSelect(e.target.checked);\n  };\n\n  const onModeChange = e => {\n    setIsEditMode(e.target.checked);\n    if (e.target.checked) {\n      orgchart.current.expandAllNodes();\n    }\n  };\n\n  return (\n    <div className=\"edit-chart-wrapper\">\n      <section className=\"toolbar\">\n        <div className=\"selected-nodes\">\n          <div>\n            <h4 style={{ display: \"inline-block\" }}>Selected Node</h4>\n            <input\n              style={{ marginLeft: \"1rem\" }}\n              id=\"cb-multiple-select\"\n              type=\"checkbox\"\n              checked={isMultipleSelect}\n              onChange={onMultipleSelectChange}\n            />\n            <label htmlFor=\"cb-multiple-select\">Multiple Select</label>\n          </div>\n          <ul>\n            {Array.from(selectedNodes).map(node => (\n              <li key={node.id}>\n                {node.name} - {node.title}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"new-nodes\">\n          <h4>New Nodes</h4>\n          <ul>\n            {newNodes &&\n              newNodes.map((node, index) => (\n                <li key={index}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    value={node.name}\n                    onChange={e => onNameChange(e, index)}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"title\"\n                    value={node.title}\n                    onChange={e => onTitleChange(e, index)}\n                  />\n                  {newNodes.length === 1 || index === newNodes.length - 1 ? (\n                    <button disabled={!isEditMode} onClick={addNewNode}>\n                      +\n                    </button>\n                  ) : (\n                    <button\n                      disabled={!isEditMode}\n                      onClick={() => removeNewNode(index)}\n                    >\n                      -\n                    </button>\n                  )}\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className=\"action-buttons\">\n          <button disabled={!isEditMode} onClick={addChildNodes}>\n            Add Child Nodes\n          </button>\n          <button disabled={!isEditMode} onClick={addSiblingNodes}>\n            Add Sibling Nodes\n          </button>\n          <button disabled={!isEditMode} onClick={addRootNode}>\n            Add Root Node\n          </button>\n          <button disabled={!isEditMode} onClick={remove}>\n            Remove Nodes\n          </button>\n          <input\n            style={{ marginLeft: \"1rem\" }}\n            id=\"cb-mode\"\n            type=\"checkbox\"\n            checked={isEditMode}\n            onChange={onModeChange}\n          />\n          <label htmlFor=\"cb-mode\">Edit Mode</label>\n        </div>\n      </section>\n      <OrganizationChart\n        ref={orgchart}\n        datasource={ds}\n        collapsible={!isEditMode}\n        multipleSelect={isMultipleSelect}\n        onClickNode={readSelectedNode}\n        onClickChart={clearSelectedNode}\n      />\n    </div>\n  );\n};\n\nexport default EditChart;\n","import React, { useRef, useState } from \"react\";\nimport JSONDigger from \"json-digger\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport OrganizationChart from \"../components/ChartContainer\";\nimport \"./edit-node.css\";\n\nconst EditNode = () => {\n  const orgchart = useRef();\n  const datasource = {\n    id: \"n1\",\n    name: \"Lao Lao\",\n    title: \"general manager\",\n    children: [\n      { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\n      {\n        id: \"n3\",\n        name: \"Su Miao\",\n        title: \"department manager\",\n        children: [\n          { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\n          {\n            id: \"n5\",\n            name: \"Hei Hei\",\n            title: \"senior engineer\",\n            children: [\n              { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\n              { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\n            ]\n          },\n          { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\n        ]\n      },\n      { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\n      {\n        id: \"n10\",\n        name: \"Chun Miao\",\n        title: \"department manager\",\n        children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\n      }\n    ]\n  };\n  const [ds, setDS] = useState(datasource);\n  const dsDigger = new JSONDigger(ds, \"id\", \"children\");\n\n  const [selectedNodes, setSelectedNodes] = useState(new Set());\n  const [newNodeName, setNewNodeName] = useState(\"\");\n  const [newNodeTitle, setNewNodeTitle] = useState(\"\");\n  const [isEditMode, setIsEditMode] = useState(true);\n  const [isMultipleSelect, setIsMultipleSelect] = useState(false);\n\n  const readSelectedNode = nodeData => {\n    if (isMultipleSelect) {\n      setSelectedNodes(prev => new Set(prev.add(nodeData)));\n    } else {\n      setSelectedNodes(new Set([nodeData]));\n    }\n  };\n\n  const clearSelectedNode = () => {\n    setSelectedNodes(new Set());\n  };\n\n  const onNameChange = e => {\n    setNewNodeName(e.target.value);\n  };\n\n  const onTitleChange = e => {\n    setNewNodeTitle(e.target.value);\n  };\n\n  const updateNodes = async () => {\n    await dsDigger.updateNodes([...selectedNodes].map(node => node.id), { id: uuidv4(), name: newNodeName, title: newNodeTitle });\n    setDS({ ...dsDigger.ds });\n  };\n\n  const onMultipleSelectChange = e => {\n    setIsMultipleSelect(e.target.checked);\n  };\n\n  const onModeChange = e => {\n    setIsEditMode(e.target.checked);\n    if (e.target.checked) {\n      orgchart.current.expandAllNodes();\n    }\n  };\n\n  return (\n    <div className=\"edit-chart-wrapper\">\n      <section className=\"toolbar\">\n        <div className=\"selected-nodes\">\n          <div>\n            <h4 style={{ display: \"inline-block\" }}>Selected Node</h4>\n            <input\n              style={{ marginLeft: \"1rem\" }}\n              id=\"cb-multiple-select\"\n              type=\"checkbox\"\n              checked={isMultipleSelect}\n              onChange={onMultipleSelectChange}\n            />\n            <label htmlFor=\"cb-multiple-select\">Multiple Select</label>\n          </div>\n          <ul>\n            {Array.from(selectedNodes).map(node => (\n              <li key={node.id}>\n                {node.name} - {node.title}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"new-nodes\">\n          <h4>New Node</h4>\n\n                  <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    value={newNodeName}\n                    onChange={onNameChange}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"title\"\n                    value={newNodeTitle}\n                    onChange={onTitleChange}\n                  />\n  \n        </div>\n        <div className=\"action-buttons\">\n          <button disabled={!isEditMode} onClick={updateNodes}>\n            Update Nodes\n          </button>\n          <input\n            style={{ marginLeft: \"1rem\" }}\n            id=\"cb-mode\"\n            type=\"checkbox\"\n            checked={isEditMode}\n            onChange={onModeChange}\n          />\n          <label htmlFor=\"cb-mode\">Edit Mode</label>\n        </div>\n      </section>\n      <OrganizationChart\n        ref={orgchart}\n        datasource={ds}\n        collapsible={!isEditMode}\n        multipleSelect={isMultipleSelect}\n        onClickNode={readSelectedNode}\n        onClickChart={clearSelectedNode}\n      />\n    </div>\n  );\n};\n\nexport default EditNode;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport Home from \"./home/home\";\nimport DefaultChart from \"./default-chart/default-chart\";\nimport PanZoomChart from \"./pan-zoom-chart/pan-zoom-chart\";\nimport CustomNodeChart from \"./custom-node-chart/custom-node-chart\";\nimport ExportChart from \"./export-chart/export-chart\";\nimport DragDropChart from \"./drag-drop-chart/drag-drop-chart\";\nimport EditChart from \"./edit-chart/edit-chart\";\nimport EditNode from \"./edit-node/edit-node\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <nav>\n          <NavLink to=\"/\" exact activeClassName=\"selected\">Home</NavLink>\n          <NavLink to=\"/default-chart\" activeClassName=\"selected\">Deault Chart</NavLink>\n          <NavLink to=\"/pan-zoom-chart\" activeClassName=\"selected\">Pan & Zoom Chart</NavLink>\n          <NavLink to=\"/custom-node-chart\" activeClassName=\"selected\">Custom Node Chart</NavLink>\n          <NavLink to=\"/export-chart\" activeClassName=\"selected\">Export Chart</NavLink>\n          <NavLink to=\"/drag-drop-chart\" activeClassName=\"selected\">Drap & Drop Chart</NavLink>\n          <NavLink to=\"/edit-chart\" activeClassName=\"selected\">Edit Chart</NavLink>\n          <NavLink to=\"/edit-node\" activeClassName=\"selected\">Edit Node</NavLink>\n        </nav>\n\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/default-chart\" component={DefaultChart} />\n        <Route path=\"/pan-zoom-chart\" component={PanZoomChart} />\n        <Route path=\"/custom-node-chart\" component={CustomNodeChart} />\n        <Route path=\"/export-chart\" component={ExportChart} />\n        <Route path=\"/drag-drop-chart\" component={DragDropChart} />\n        <Route path=\"/edit-chart\" component={EditChart} />\n        <Route path=\"/edit-node\" component={EditNode} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}